[{"/mnt/c/users/logan/code/shoppies/src/index.js":"1","/mnt/c/users/logan/code/shoppies/src/App.js":"2","/mnt/c/users/logan/code/shoppies/src/reportWebVitals.js":"3","/mnt/c/users/logan/code/shoppies/src/components/MovieCard/MovieCard.js":"4","/mnt/c/users/logan/code/shoppies/src/components/SearchPanel/SearchPanel.js":"5"},{"size":500,"mtime":1610885965211,"results":"6","hashOfConfig":"7"},{"size":279,"mtime":1610927768230,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610885965230,"results":"9","hashOfConfig":"7"},{"size":616,"mtime":1610929625997,"results":"10","hashOfConfig":"7"},{"size":2233,"mtime":1610930727934,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"x6vsyd",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/users/logan/code/shoppies/src/index.js",[],["23","24"],"/mnt/c/users/logan/code/shoppies/src/App.js",[],"/mnt/c/users/logan/code/shoppies/src/reportWebVitals.js",[],"/mnt/c/users/logan/code/shoppies/src/components/MovieCard/MovieCard.js",[],"/mnt/c/users/logan/code/shoppies/src/components/SearchPanel/SearchPanel.js",["25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":19,"column":13,"nodeType":"32","endLine":44,"endColumn":4},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]